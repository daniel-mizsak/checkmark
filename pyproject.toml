# Build System
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Project Metadata
[project]
name = "checkmark"
version = "0.1.0"
description = "Automatically create and evaluate assessments."
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [
    { name = "Daniel Mizsak", email = "info@pythonvilag.hu" },
    { name = "Samu Pecsenye", email = "samu.pecsenye@gmail.com" },
]
keywords = ["assessment", "evaluation", "automatic", "checkmark"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Education",
]
dependencies = [
    # Generator
    "cryptography==41.0.7",
    "fpdf2==2.7.7",
    "matplotlib==3.8.2",
    "openpyxl==3.1.2",
    "pandas==2.1.4",
    "qrcode==7.4.2",
    "requests==2.31.0",
    "ttkbootstrap==1.10.1",
    # Evaluator
    "opencv-python==4.8.1.78",
    "pillow_heif==0.14.0",
    "pyzbar==0.1.9",
    #Server
    "Flask==2.3.3",
]

[project.optional-dependencies]
dev = [
    "black",
    "furo",
    "mypy",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "ruff",
    "sphinx-copybutton",
    "sphinx",
    "tox",
    # Stubs
    "pandas-stubs",
    "types-fpdf2",
    "types-Pillow",
    "types-requests",
]

[project.scripts]
checkmark = "checkmark.main:main"

[project.urls]
Repository = "https://github.com/daniel-mizsak/checkmark"
Homepage = "https://pythonvilag.hu/pv/projects/checkmark"

# Tools
# MyPy
[tool.mypy]
exclude = ["^tests/"]
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_context = true
strict = true
warn_unreachable = true
warn_unused_ignores = true

# Pytest
[tool.pytest.ini_options]
addopts = "--cov=checkmark"
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]

# Ruff
[tool.ruff]
select = ["ALL"]
line-length = 120
src = ["src", "tests"]
ignore = [
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "FIX",   # flake8-fixme
    "INP",   # flake8-no-pep420
    "S104",  # hardcoded-bind-all-interfaces
    "TD002", # missing-todo-author
    "TD003", # missing-todo-link
]
[tool.ruff.per-file-ignores]
"**/__init__.py" = [
    "D104", # undocumented-public-package
]
"tests/**/*.py" = [
    "ANN001",  # missing-type-function-argument
    "ANN201",  # missing-return-type-undocumented-public-function
    "D",       # pydocstyle
    "PLR2004", # magic-value-comparison
    "S101",    # assert
]
[tool.ruff.pydocstyle]
convention = "google"

# Tox
[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py311,mypy,ruff
    skip-missing-interpreters = true

    [gh]
    python =
        3.11 = py311, mypy, ruff

    [testenv]
    deps =
        pytest
        pytest-cov
    commands = pytest {posargs:tests}

    [testenv:mypy]
    basepython = python3.11
    deps =
        mypy
        pandas-stubs
        types-fpdf2
        types-Pillow
        types-requests
    commands = mypy src/checkmark/generator/

    [testenv:ruff]
    basepython = python3.11
    deps = ruff
    commands = ruff check src/checkmark/generator/
"""
